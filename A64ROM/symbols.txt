sys_seek.syntaxErr: EQU 0x000050AF
sys_save.ioErr: EQU 0x0000509E
sys_save.syntaxErr: EQU 0x0000509F
sys_open.ioErr: EQU 0x00005086
sys_open.syntaxErr: EQU 0x00005087
sys_copy.syntaxErr: EQU 0x00005053
sys_lower.syntaxErr: EQU 0x00005029
sys_upper.syntaxErr: EQU 0x00005019
sys_writeString.syntaxErr: EQU 0x00005009
sys_startsWith.true: EQU 0x00004FF8
sys_startsWith.syntaxErr: EQU 0x00004FF9
sys_startsWith: EQU 0x00004FDB
sys_put.syntaxErr: EQU 0x00004FDA
sys_putChar.syntaxErr: EQU 0x00004FC1
sys_gotoxy.syntaxErr: EQU 0x00004FB2
sys_poke.syntaxErr: EQU 0x00004F97
sys_delay.syntaxErr: EQU 0x00004F70
sys_read.cont: EQU 0x00004F2F
sys_read.parseErr: EQU 0x00004F44
sys_read.hex: EQU 0x00004F28
sys_write.syntaxErr: EQU 0x00004EE8
ParseError: EQU 0x00004EC4
run_isValue.true: EQU 0x00004EC1
run_isValue: EQU 0x00004EB3
run_declare: EQU 0x00004E92
sys_readKey: EQU 0x0000505B
sys_get: EQU 0x00005062
sys_getChar: EQU 0x00005054
sys_len: EQU 0x0000502A
sys_peek: EQU 0x00004F71
sys_rnd: EQU 0x00004F5E
sys_abs: EQU 0x00004F5A
sys_fread: EQU 0x000050B0
sys_seek: EQU 0x000050A4
sys_reset: EQU 0x000050A0
sys_save: EQU 0x00005088
sys_open: EQU 0x00005070
sys_lower: EQU 0x0000501A
sys_upper: EQU 0x0000500A
sys_gotoxy: EQU 0x00004F98
sys_putChar: EQU 0x00004FB3
sys_delay: EQU 0x00004F62
sys_copy: EQU 0x00005039
sys_cmp: EQU 0x00005038
sys_put: EQU 0x00004FC2
sys_poke: EQU 0x00004F7E
sys_clrScr: EQU 0x00005069
sys_writeString: EQU 0x00004FFA
sys_readString: EQU 0x00004EE9
sys_read: EQU 0x00004F0A
sys_nextLn: EQU 0x00004F56
sys_click: EQU 0x00004F52
sys_beep: EQU 0x00004F4E
sys_write: EQU 0x00004ED0
run_if.end: EQU 0x00004DA4
run_if.else: EQU 0x00004D85
run_if.if: EQU 0x00004D9B
run_if.endif: EQU 0x00004D8E
run_if.syntaxErr: EQU 0x00004DA5
run_if.loop: EQU 0x00004D6C
run_while.end: EQU 0x00004D56
run_while.while: EQU 0x00004D31
run_while.endwhile: EQU 0x00004D3A
run_while.loop: EQU 0x00004D1C
run_while.true: EQU 0x00004D47
run_else.end: EQU 0x00004CF5
run_else.if: EQU 0x00004CEC
run_else.endif: EQU 0x00004CDF
run_else.syntaxErr: EQU 0x00004CF6
run_else.loop: EQU 0x00004CCA
run_execStrAssignment.syntaxErr: EQU 0x00004CC4
run_execStrAssignment.break: EQU 0x00004CB6
run_execStrAssignment.loop: EQU 0x00004CAA
run_execArrAssignment.syntaxErr: EQU 0x00004C83
run_execArrAssignment.break: EQU 0x00004C72
run_execArrAssignment.loop: EQU 0x00004C66
run_execAssignment.syntaxError: EQU 0x00004C3B
run_execStrAssignment: EQU 0x00004C84
run_execAssignment.eval: EQU 0x00004C1B
run_isMulOp.true: EQU 0x00004C03
run_isMulOp: EQU 0x00004BF0
run_isAddOp: EQU 0x00004BDE
run_isUnaryOperator.true: EQU 0x00004BDB
run_evalComp.loop1: EQU 0x00004BAD
run_evalComp.cont: EQU 0x00004BA7
run_evalComp.false: EQU 0x00004BA2
run_evalComp.true: EQU 0x00004B9D
run_evalComp.neq: EQU 0x00004B94
run_evalComp.eq: EQU 0x00004B8B
run_evalComp.le: EQU 0x00004B82
run_evalComp.ge: EQU 0x00004B79
run_evalComp.lt: EQU 0x00004B70
run_evalComp.gt: EQU 0x00004B67
run_evalComp.do: EQU 0x00004B31
run_evalComp.next: EQU 0x00004BBF
run_evalComp.end: EQU 0x00004BC6
run_evalComp.loop: EQU 0x00004B01
run_evalAdd.loop1: EQU 0x00004AE5
run_evalAdd.cont: EQU 0x00004ADF
run_evalAdd.alt: EQU 0x00004ADC
run_evalAdd.sub: EQU 0x00004AD7
run_evalAdd.add: EQU 0x00004AD2
run_evalAdd.do: EQU 0x00004AA9
run_evalAdd.next: EQU 0x00004AF6
run_evalAdd.end: EQU 0x00004AFC
run_evalAdd.loop: EQU 0x00004A89
run_evalMul.loop1: EQU 0x00004A6C
run_evalMul.cont: EQU 0x00004A66
run_evalMul.con: EQU 0x00004A63
run_evalMul.mod: EQU 0x00004A5E
run_evalMul.mul: EQU 0x00004A52
run_evalMul.do: EQU 0x00004A25
run_evalMul.next: EQU 0x00004A7D
run_evalMul.end: EQU 0x00004A84
run_evalMul.loop: EQU 0x00004A01
run_evalIndex.do: EQU 0x000049BB
run_evalIndex.next: EQU 0x000049F6
run_evalIndex.end: EQU 0x000049FC
run_evalIndex.loop: EQU 0x000049A3
run_evalStrIndex.loop1: EQU 0x00004987
run_evalStrIndex.do: EQU 0x00004961
run_evalStrIndex.next: EQU 0x00004998
run_evalStrIndex.end: EQU 0x0000499E
run_evalStrIndex.loop: EQU 0x00004949
run_evalUnary.loop1: EQU 0x0000492C
run_evalUnary.cont: EQU 0x00004922
run_evalUnary.der: EQU 0x0000491D
run_evalUnary.addr: EQU 0x0000491B
run_evalUnary.minus: EQU 0x00004916
run_evalUnary.not: EQU 0x00004911
run_evalUnary.next: EQU 0x0000493D
run_isUnaryOperator: EQU 0x00004BC8
run_evalUnary.end: EQU 0x00004944
run_evalUnary.loop: EQU 0x000048D9
run_evalString: EQU 0x000048D5
run_evalFunction.loop1: EQU 0x000048BB
run_evalFunction.cont: EQU 0x000048B1
run_execFunction: EQU 0x00004E17
run_evalFunction.next: EQU 0x000048CC
run_evalFunction.end: EQU 0x000048D3
run_evalFunction.loop: EQU 0x00004888
run_sanitiseParens.loop1: EQU 0x0000486F
run_sanitiseParens.next: EQU 0x0000487D
run_sanitiseParens.end: EQU 0x00004883
run_sanitiseParens.loop: EQU 0x0000483E
run_evaluate.syntaxErr: EQU 0x00004837
run_evaluate.end: EQU 0x00004825
run_evalComp: EQU 0x00004AFE
run_evalAdd: EQU 0x00004A86
run_evalMul: EQU 0x000049FE
run_execArrAssignment: EQU 0x00004C3C
run_evalUnary: EQU 0x000048D6
run_evalStrIndex: EQU 0x00004946
run_evalIndex: EQU 0x000049A0
run_sanitiseParens: EQU 0x0000483B
run_evaluate.evalloop: EQU 0x000047FF
run_evaluate.store: EQU 0x000047FC
run_evaluate.strSkip: EQU 0x000047B1
run_evaluate.other: EQU 0x000047ED
run_evaluate.call: EQU 0x000047E6
run_evaluate.num: EQU 0x000047DF
run_evaluate.var: EQU 0x000047BA
run_evaluate.string: EQU 0x0000479F
run_evaluate.eval: EQU 0x000047F5
run_evaluate: EQU 0x00004774
run_nextBC.one: EQU 0x00004772
run_nextBC.two: EQU 0x00004771
run_nextBC.three: EQU 0x00004770
run_declareArray: EQU 0x00004E7D
run_stop: EQU 0x00004E71
run_ret: EQU 0x00004E60
run_execUserCall: EQU 0x00004E3B
run_execSyscall: EQU 0x00004DA6
run_loop: EQU 0x00004CF7
run_while: EQU 0x00004D07
run_else: EQU 0x00004CC5
run_if: EQU 0x00004D58
run_execAssignment: EQU 0x00004C06
run_findStmtEnd.notFound: EQU 0x00004715
run_findStmtEnd.found: EQU 0x00004711
run_findStmtEnd.loop: EQU 0x00004705
run_nextStmt: EQU 0x00004718
run_execStmt: EQU 0x00004723
run_main.end: EQU 0x00004701
run_main.loop: EQU 0x000046F5
run_syntaxError: EQU 0x000046E9
run_findProcedures.proc: EQU 0x000046C5
run_findProcedures.end: EQU 0x000046E8
run_findProcedures.loop: EQU 0x000046B7
run_findStmtEnd: EQU 0x00004702
run_findProcedures: EQU 0x000046B4
run_init: EQU 0x00004699
run_debug: EQU 0x00004692
Vars: EQU 0x00008300
Expression: EQU 0x00008280
ArrAddr: EQU 0x0000821A
ArrIndex: EQU 0x00008218
ProcAddr: EQU 0x00008216
DataSeg: EQU 0x00008214
Trap: EQU 0x00008212
NestingLevel: EQU 0x0000820F
EvalProgress: EQU 0x0000820E
StmtEnd: EQU 0x0000820C
StmtStart: EQU 0x0000820A
ExprEnd: EQU 0x00008208
ExprStart: EQU 0x00008206
NextBC: EQU 0x00008204
PrevBC: EQU 0x00008202
CurrentBC: EQU 0x00008200
MAX_EXPR_BCS: EQU 0x00000040
Terminated: EQU 0x0000467F
apl_keywordCmp.end: EQU 0x00004671
apl_keywordCmp.next: EQU 0x00004667
apl_keywordCmp.loop: EQU 0x0000465C
apl_keywordCmp: EQU 0x00004658
apl_getKeywordCode.end: EQU 0x00004654
apl_getKeywordCode.loop: EQU 0x00004644
apl_getKeywordCode: EQU 0x0000463D
apl_getOperatorCode.end: EQU 0x00004639
apl_getOperatorCode.paren: EQU 0x00004637
apl_getOperatorCode.sep: EQU 0x0000463A
apl_getOperatorCode.ass: EQU 0x00004623
apl_getOperatorCode.le: EQU 0x00004620
apl_getOperatorCode.ge: EQU 0x0000461D
apl_getOperatorCode.neq: EQU 0x0000461A
apl_getOperatorCode.one: EQU 0x00004626
apl_newIdentifier.loop: EQU 0x000045C4
apl_nameMatch.true: EQU 0x000045B8
apl_nameMatch.loop: EQU 0x0000459F
apl_getFunCode.found: EQU 0x00004596
apl_getFunCode.notFound: EQU 0x00004593
apl_getFunCode.loop: EQU 0x0000457F
apl_newIdentifier: EQU 0x000045BE
apl_nextIdentifier: EQU 0x000045D8
apl_getVarCode.found: EQU 0x00004574
apl_nameMatch: EQU 0x00004599
apl_getVarCode.notFound: EQU 0x00004571
apl_getVarCode.loop: EQU 0x0000455D
apl_isHexDigit.true: EQU 0x00004545
apl_isDecDigit.true: EQU 0x00004539
apl_isSpecialChar.end: EQU 0x0000451A
apl_isSpecialChar.true: EQU 0x00004514
apl_isSpecialChar.false: EQU 0x00004518
apl_isSpecialChar.loop: EQU 0x00004506
apl_isLetter.true: EQU 0x000044FD
apl_isUCaseLetter.no: EQU 0x000044E9
apl_isUCaseLetter: EQU 0x000044D9
apl_isLCaseLetter.no: EQU 0x000044D6
apl_tokenizeString.end: EQU 0x000044C2
apl_tokenizeString.nl: EQU 0x000044BC
apl_tokenizeString.endQuote: EQU 0x000044B7
apl_tokenizeString.loop: EQU 0x000044A0
apl_tokenizeComment.end: EQU 0x00004489
apl_tokenizeComment.loop: EQU 0x0000447A
apl_processKeyword.cont: EQU 0x00004463
apl_processKeyword.ifOrwhile: EQU 0x00004460
apl_getVarCode: EQU 0x00004557
apl_getFunCode: EQU 0x00004578
apl_processOperator.syntaxErr: EQU 0x00004439
apl_processOperator.while: EQU 0x00004431
apl_processOperator.if: EQU 0x0000442D
apl_processOperator.cont3: EQU 0x00004433
apl_processOperator.cont2: EQU 0x00004418
apl_processOperator.cont1: EQU 0x0000440C
apl_processOperator.cont: EQU 0x00004400
apl_getOperatorCode: EQU 0x000045E8
apl_processOperator: EQU 0x000043EE
apl_tokenizeOperator.ld: EQU 0x000043D3
apl_tokenizeOperator.end: EQU 0x000043D8
apl_tokenizeOperator.next: EQU 0x000043C2
apl_processMinus: EQU 0x000043E4
apl_processBracket: EQU 0x00004392
apl_processHex: EQU 0x00004357
apl_tokenizeHex.end: EQU 0x0000434B
apl_tokenizeHex.next: EQU 0x00004344
apl_isHexDigit: EQU 0x0000453C
apl_tokenizeHex.loop: EQU 0x00004337
apl_processNumber: EQU 0x00004362
apl_processDec: EQU 0x00004324
apl_tokenizeDec.end: EQU 0x00004318
apl_tokenizeDec.next: EQU 0x00004311
apl_tokenizeDec.loop: EQU 0x00004304
apl_tokenizeDec.neg: EQU 0x000042FF
apl_isBuiltInFunction.endNext: EQU 0x000042E0
apl_isBuiltInFunction.next: EQU 0x000042D5
apl_isBuiltInFunction.true: EQU 0x000042E6
apl_isBuiltInFunction.loop2: EQU 0x000042C2
apl_isBuiltInFunction.false: EQU 0x000042F0
apl_isBuiltInFunction.loop: EQU 0x000042B7
apl_isKeyword.endNext: EQU 0x000042A2
apl_isKeyword.next: EQU 0x00004297
apl_isKeyword.true: EQU 0x000042A8
apl_isKeyword.loop2: EQU 0x00004284
apl_isKeyword.false: EQU 0x000042B0
apl_isKeyword.loop: EQU 0x00004279
apl_processVar: EQU 0x00004449
apl_processBuiltInFunction: EQU 0x0000446C
apl_processKeyword: EQU 0x00004455
apl_tokenizeLiteral.end: EQU 0x0000426F
apl_isBuiltInFunction: EQU 0x000042B3
apl_tokenizeLiteral.kwd: EQU 0x00004262
apl_isKeyword: EQU 0x00004275
apl_isLCaseLetter: EQU 0x000044C6
apl_tokenizeLiteral.endLoop: EQU 0x0000423E
apl_tokenizeLiteral.next: EQU 0x00004237
apl_tokenizeLiteral.loop: EQU 0x00004223
apl_tokenize.loop: EQU 0x0000420F
apl_tokenizeString: EQU 0x00004498
apl_tokenizeHex: EQU 0x0000432F
apl_tokenizeBracket: EQU 0x0000437E
apl_isBracket: EQU 0x00004548
apl_tokenizeOperator: EQU 0x000043B0
apl_tokenizeMinus: EQU 0x0000439B
apl_nextToken.cont: EQU 0x000041E9
apl_nextToken.checkNeg: EQU 0x000041D4
apl_tokenizeDec: EQU 0x000042F3
apl_isBracket.true: EQU 0x00004554
apl_isDecDigit: EQU 0x00004530
apl_tokenizeLiteral: EQU 0x00004220
apl_isLetter: EQU 0x000044EC
apl_nextToken.next: EQU 0x000041BD
apl_nextToken.whitespace: EQU 0x000041B8
apl_isWhitespace: EQU 0x0000451D
apl_nextToken.loop: EQU 0x000041A8
apl_nextToken: EQU 0x000041A8
apl_moveFile: EQU 0x00004191
apl_tokenize: EQU 0x0000420C
apl_initIdentifierTabs: EQU 0x00004183
Bytecodes: EQU 0x00008B08
Varnames: EQU 0x00008308
Token: EQU 0x00008208
IfOrWhile: EQU 0x00008205
IsOperator: EQU 0x00008204
ProgramPtr: EQU 0x00008202
VarnamePtr: EQU 0x00008200
FUNNAMES_SIZE: EQU 0x00000400
VARNAMES_SIZE: EQU 0x00000400
BuiltInFunctions: EQU 0x000040B0
SYS_FREAD_B: EQU 0x0000001C
SYS_SEEK_B: EQU 0x0000001B
SYS_RESET_B: EQU 0x0000001A
SYS_SAVE_B: EQU 0x00000019
SYS_OPEN_B: EQU 0x00000018
SYS_LOWER_B: EQU 0x00000017
SYS_UPPER_B: EQU 0x00000016
SYS_READKEY_B: EQU 0x00000015
SYS_GOTOXY_B: EQU 0x00000014
SYS_PUTCHAR_B: EQU 0x00000013
SYS_DELAY_B: EQU 0x00000012
SYS_COPY_B: EQU 0x00000011
SYS_CMP_B: EQU 0x00000010
SYS_PUT_B: EQU 0x0000000F
SYS_POKE_B: EQU 0x0000000E
SYS_CLRSCR_B: EQU 0x0000000D
SYS_GET_B: EQU 0x0000000C
SYS_GETCHAR_B: EQU 0x0000000B
SYS_LEN_B: EQU 0x0000000A
apl_isUCaseLetter.yes: EQU 0x000044E6
SYS_WRITES_B: EQU 0x00000009
SYS_READS_B: EQU 0x00000008
SYS_PEEK_B: EQU 0x00000007
SYS_RND_B: EQU 0x00000006
SYS_ABS_B: EQU 0x00000005
SYS_NEWLN_B: EQU 0x00000004
SYS_CLICK_B: EQU 0x00000003
SYS_BEEP_B: EQU 0x00000002
SYS_WRITE_B: EQU 0x00000001
SYS_READ_B: EQU 0x00000000
STOP_T: EQU 0x000040A9
STRING_T: EQU 0x000040A4
RECORD_T: EQU 0x0000409F
ARRAY_T: EQU 0x0000409A
NEXT_T: EQU 0x00004094
FOR_T: EQU 0x0000408F
LOOP_T: EQU 0x00004089
WHILE_T: EQU 0x00004082
ENDIF_T: EQU 0x0000407B
ELSE_T: EQU 0x00004075
IF_T: EQU 0x00004071
RET_T: EQU 0x0000406C
FUN_T: EQU 0x00004062
PROC_T: EQU 0x0000405C
PROG_T: EQU 0x00004056
KeywordTokens: EQU 0x00004056
NL_B: EQU 0x00000000
STRING_B: EQU 0x00000053
ARRAY_B: EQU 0x00000041
STOP_B: EQU 0x00000054
RET_B: EQU 0x00000052
PROC_B: EQU 0x00000070
END_B: EQU 0x00000044
WHILE_B: EQU 0x00000057
LOOP_B: EQU 0x0000004C
ENDIF_B: EQU 0x00000065
ELSE_B: EQU 0x00000045
IF_B: EQU 0x00000049
COMMENT_B: EQU 0x00000025
NUM_B: EQU 0x0000006D
SYSCALL_B: EQU 0x00000073
USERCALL_B: EQU 0x00000075
VAR_B: EQU 0x00000076
ASSIGNMENT_B: EQU 0x00000061
COMMA_B: EQU 0x0000002C
TERMINATOR_B: EQU 0x0000003B
SEPARATOR_B: EQU 0x0000003A
STRINDEX_B: EQU 0x00000023
INDEX_B: EQU 0x0000002E
DEREFERENCE_B: EQU 0x0000005E
ADDR_B: EQU 0x00000040
NOT_B: EQU 0x00000021
ALTERNATIVE_B: EQU 0x0000007C
CONJUNCTION_B: EQU 0x00000026
LESSER_EQUAL_B: EQU 0x0000006C
GREATER_EQUAL_B: EQU 0x00000067
LESSER_B: EQU 0x0000003C
GREATER_B: EQU 0x0000003E
RIGHT_CURLY_B: EQU 0x0000007D
LEFT_CURLY_B: EQU 0x0000007B
RIGHT_BRACKET_B: EQU 0x0000005D
LEFT_BRACKET_B: EQU 0x0000005B
RIGHT_PAREN_B: EQU 0x00000029
LEFT_PAREN_B: EQU 0x00000028
QUOTE_B: EQU 0x00000022
NOT_EQUAL_B: EQU 0x0000006E
EQUAL_B: EQU 0x0000003D
MOD_B: EQU 0x0000005C
DIV_B: EQU 0x0000002F
MUL_B: EQU 0x0000002A
MINUS_B: EQU 0x0000007E
ADD_B: EQU 0x0000002B
SEPARATOR_T: EQU 0x00004054
TERMINATOR_T: EQU 0x00004052
COMMA_T: EQU 0x00004050
STRINDEX_T: EQU 0x0000404E
INDEX_T: EQU 0x0000404C
DEREFERENCE_T: EQU 0x0000404A
ADDR_T: EQU 0x00004048
NOT_T: EQU 0x00004046
ALTERNATIVE_T: EQU 0x00004044
CONJUNCTION_T: EQU 0x00004042
ASSIGNMENT_T: EQU 0x0000403F
LESSER_EQUAL_T: EQU 0x0000403C
GREATER_EQUAL_T: EQU 0x00004039
LESSER_T: EQU 0x00004037
GREATER_T: EQU 0x00004035
RIGHT_BRACKET_T: EQU 0x00004033
LEFT_BRACKET_T: EQU 0x00004031
RIGHT_PAREN_T: EQU 0x0000402F
QUOTE_T: EQU 0x0000402B
NOT_EQUAL_T: EQU 0x00004028
EQUAL_T: EQU 0x00004026
MOD_T: EQU 0x00004024
DIV_T: EQU 0x00004022
MUL_T: EQU 0x00004020
SUB_T: EQU 0x0000401E
ADD_T: EQU 0x0000401C
SpecialChars: EQU 0x00004000
tar_main.loop: EQU 0x00002E6F
TarTest: EQU 0x00002E58
ed_end.skip: EQU 0x00002E51
ed_eraseLine.cont: EQU 0x00002E05
ed_eraseLine: EQU 0x00002DBF
ed_eraseMulti.loop: EQU 0x00002DB9
ed_eraseMulti.multi: EQU 0x00002DB2
ed_addLine.loop: EQU 0x00002D7E
ed_addLine: EQU 0x00002D73
ed_computeLineLen: EQU 0x00002D27
ed_lineLen.end: EQU 0x00002D23
ed_lineLen.loop: EQU 0x00002D16
ed_lineLen: EQU 0x00002D13
ed_computeCursorAddress.end: EQU 0x00002D0C
Funnames: EQU 0x00008708
ed_computeCursorAddress.loop: EQU 0x00002CEB
ed_computeCursorAddress.cont: EQU 0x00002CE0
ed_computeCursorAddress: EQU 0x00002CCD
ed_isAppend.end: EQU 0x00002CCB
ed_isAppend.append: EQU 0x00002CC9
ed_appendLine: EQU 0x00002D33
ed_insertLine: EQU 0x00002D3D
ed_processLine.append: EQU 0x00002CA8
ed_save.save: EQU 0x00002C6E
ed_fReadLn: EQU 0x00002C52
ed_up: EQU 0x00002C35
ed_upMulti.loop: EQU 0x00002C2D
ed_upMulti.multi: EQU 0x00002C26
ed_down.scroll: EQU 0x00002C0F
ed_isAppend: EQU 0x00002CAC
ed_down: EQU 0x00002BFD
ed_downMulti.loop: EQU 0x00002BF7
ed_downMulti.multi: EQU 0x00002BF0
ed_computeTotalLines.end: EQU 0x00002BE0
ed_computeTotalLines.loop: EQU 0x00002BC3
ed_showPage.end: EQU 0x00002BB2
ed_showPage.cont: EQU 0x00002B94
ed_showPage.cursor: EQU 0x00002B92
ed_showPage.showLoop: EQU 0x00002B88
ed_showPage.show: EQU 0x00002B7D
ed_showPage.lineLoop: EQU 0x00002B6A
ed_end: EQU 0x00002E38
ed_home: EQU 0x00002E1D
ed_eraseMulti: EQU 0x00002DA3
ed_downMulti: EQU 0x00002BE1
ed_upMulti: EQU 0x00002C17
ed_save: EQU 0x00002C5A
ed_processCmds.exit: EQU 0x00002B4E
ed_processCmds.esc: EQU 0x00002B49
ed_processCmds.noCmd: EQU 0x00002B46
ed_processLine: EQU 0x00002C9D
ed_processCmds: EQU 0x00002B09
ed_showPage: EQU 0x00002B54
ed_newFile: EQU 0x00002E29
ed_main.loop: EQU 0x00002ABB
ed_computeTotalLines: EQU 0x00002BB3
ed_main.error: EQU 0x00002AE2
ed_main.loadFile: EQU 0x00002A9F
ed_main.newFile: EQU 0x00002AB6
ed_init: EQU 0x00002AE9
PressAnyKey: EQU 0x00002A82
EdLineBuff: EQU 0x00008300
NewBlockAddr: EQU 0x00008213
NewEofAddr: EQU 0x00008211
EofAddr: EQU 0x0000820F
LineLen: EQU 0x0000820E
CursorAddr: EQU 0x0000820C
CurrentAddr: EQU 0x0000820A
TotalLines: EQU 0x00008208
CursorFileLine: EQU 0x00008206
CursorLine: EQU 0x00008205
StartLine: EQU 0x00008203
ScreenLine: EQU 0x00008202
FileLine: EQU 0x00008200
onp_processOperator.error: EQU 0x00002A7F
onp_processOperator.negate: EQU 0x00002A75
onp_processOperator.minus: EQU 0x00002A66
onp_processOperator.mod: EQU 0x00002A57
onp_processOperator.multiply: EQU 0x00002A48
onp_processOperator.divide: EQU 0x00002A37
onp_processOperator.plus: EQU 0x00002A24
onp_processNumber.end: EQU 0x000029F1
onp_processNumber.error: EQU 0x000029FE
onp_processNumber.parseDec: EQU 0x000029E9
onp_processNumber.parseHex: EQU 0x000029DF
onp_processNumber.parseBin: EQU 0x000029D2
onp_processNumber: EQU 0x000029C5
onp_processToken.minus: EQU 0x000029B9
onp_main.syntaxErr: EQU 0x0000298D
onp_processToken: EQU 0x00002995
onp_main.end: EQU 0x00002972
onp_main.loop: EQU 0x00002960
RunStack: EQU 0x00008240
ArithmeticError: EQU 0x0000293F
SyntaxError: EQU 0x00002932
SYNTAX_ERROR: EQU 0x00000002
ARITHMETIC_ERROR: EQU 0x00000001
HEX: EQU 0x00000024
BIN: EQU 0x00000021
NEGATE: EQU 0x0000007E
MODULO: EQU 0x0000005C
MULTIPLY: EQU 0x0000002A
DIVIDE: EQU 0x0000002F
MINUS: EQU 0x0000002D
PLUS: EQU 0x0000002B
Result: EQU 0x00008229
Stack: EQU 0x00008200
MAX_OPERANDS: EQU 0x00000014
apl_nameMatch.false: EQU 0x000045BB
rog_nextMonster.loop: EQU 0x000028F5
rog_nextMonster: EQU 0x000028F2
rog_placeMonster: EQU 0x000028FB
rog_generateMonsters.loop: EQU 0x000028E9
rog_generateMonsters: EQU 0x000028DD
rog_isPointInRoom.end: EQU 0x000028DA
rog_isPointInRoom.false: EQU 0x000028D8
rog_isPointInRoom: EQU 0x000028B4
rog_checkWall.wall: EQU 0x0000288B
rog_checkWall: EQU 0x00002883
rog_sanitiseDoor: EQU 0x0000285B
rog_sanitiseMap.wall: EQU 0x00002854
rog_sanitiseMap.yLoop: EQU 0x00002837
rog_randomPoint: EQU 0x00002827
rog_randomPlace: EQU 0x0000282E
rog_connectRoom.end: EQU 0x000027FC
rog_connectRoom.yLoop: EQU 0x000027E9
rog_connectRoom.yLoopSetup: EQU 0x000027E0
rog_connectRoom.xLoop: EQU 0x000027CD
rog_connectRoom.yCont: EQU 0x000027BD
rog_connectRoom.yStep: EQU 0x000027BB
rog_connectRoom.xCont: EQU 0x000027AA
rog_connectRoom.xStep: EQU 0x000027A8
run_declareString: EQU 0x00004E89
rog_connectRoom: EQU 0x00002778
rog_connectRooms: EQU 0x00002766
rog_randomUnconnectedRoom.end: EQU 0x00002756
rog_randomUnconnectedRoom.skip: EQU 0x00002751
rog_randomUnconnectedRoom.loop: EQU 0x00002747
rog_randomUnconnectedRoom: EQU 0x0000273D
rog_randomRoom.end: EQU 0x0000273A
rog_randomRoom.loop: EQU 0x00002732
rog_randomRoom: EQU 0x00002725
rog_countUnconnectedRooms.cont: EQU 0x0000271F
rog_countUnconnectedRooms.loop: EQU 0x00002714
rog_countUnconnectedRooms: EQU 0x0000270A
rog_countConnectedRooms.cont: EQU 0x00002706
rog_countConnectedRooms: EQU 0x000026F6
rog_nextRoom.loop: EQU 0x000026F0
rog_selectCorridorChar.door: EQU 0x000026DF
rog_selectCorridorChar.end: EQU 0x000026E6
rog_selectCorridorChar.floor: EQU 0x000026D0
rog_selectCorridorChar.wall: EQU 0x000026D4
rog_selectCorridorChar: EQU 0x000026C8
rog_selectRoomChar.wall: EQU 0x000026C5
rog_selectRoomChar: EQU 0x000026AA
rog_drawRoom.hLoop: EQU 0x00002699
rog_drawRoom.vLoop: EQU 0x00002691
rog_drawRoom: EQU 0x00002687
rog_drawRooms.loop: EQU 0x0000267E
rog_generateRoom: EQU 0x00002614
rog_generateRooms.loop: EQU 0x0000260B
rog_nextRoom: EQU 0x000026ED
rog_initCell: EQU 0x000025F7
rog_getMapAddr.loop: EQU 0x000025A6
Procedures: EQU 0x00008400
rog_getMapAddr: EQU 0x0000259F
rog_lookSE.end: EQU 0x00002554
rog_lookSE: EQU 0x00002542
rog_lookSW.end: EQU 0x00002540
rog_lookSW: EQU 0x0000252E
rog_lookNE.end: EQU 0x0000252C
rog_lookNE: EQU 0x0000251A
rog_lookNW.end: EQU 0x00002518
rog_lookNW: EQU 0x00002506
rog_lookS.end: EQU 0x00002504
rog_lookS: EQU 0x000024EB
rog_lookN.end: EQU 0x000024E9
rog_lookN: EQU 0x000024D0
rog_lookE.end: EQU 0x000024CE
rog_lookE: EQU 0x000024B5
rog_lookW.end: EQU 0x000024B3
rog_lookW: EQU 0x0000249A
rog_isTransparent.true: EQU 0x00002497
rog_isTransparent: EQU 0x00002488
rog_printTile: EQU 0x0000247E
rog_putChar: EQU 0x000025B7
rog_getChar: EQU 0x000025BC
rog_move.step: EQU 0x0000244C
rog_move.moveNE: EQU 0x00002434
rog_move.moveNW: EQU 0x0000241C
rog_move.moveSE: EQU 0x00002440
rog_move.moveSW: EQU 0x00002428
rog_move.moveE: EQU 0x00002411
rog_move.moveW: EQU 0x00002406
rog_move.moveS: EQU 0x000023FB
rog_move.moveN: EQU 0x000023F0
rog_isMovable.true: EQU 0x000023C3
rog_isMovable: EQU 0x000023B4
rog_los: EQU 0x00002556
rog_descend: EQU 0x000023C6
rog_isDirKey.true: EQU 0x00002392
rog_isDirKey: EQU 0x0000236F
rog_printStatus: EQU 0x00002342
rog_placePc: EQU 0x00002808
rog_placeStair: EQU 0x00002802
rog_sanitiseMap: EQU 0x00002835
rog_makeConnections: EQU 0x00002758
rog_drawRooms: EQU 0x00002678
rog_generateRooms: EQU 0x00002605
rog_clearMap: EQU 0x0000258E
rog_play: EQU 0x00002395
rog_initLevel: EQU 0x0000231F
rog_init: EQU 0x00002577
ROOMMAXH: EQU 0x00000009
ROOMMAXW: EQU 0x0000000A
CELL_H: EQU 0x0000000B
CELL_W: EQU 0x0000000C
MAP_SIZE: EQU 0x000005C0
MAP_H: EQU 0x00000017
MAP_W: EQU 0x00000026
Map: EQU 0x0000830D
DungeonLev: EQU 0x0000830C
Cmd: EQU 0x0000830B
PcOn: EQU 0x0000830A
PcY: EQU 0x00008309
PcX: EQU 0x00008308
DoorSet: EQU 0x00008307
Y1: EQU 0x00008306
X1: EQU 0x00008305
rog_randomPtInRoom: EQU 0x00002893
Y0: EQU 0x00008304
X0: EQU 0x00008303
yStep: EQU 0x00008302
xStep: EQU 0x00008301
Crossover: EQU 0x00008300
DATA: EQU 0x00008300
Monsters: EQU 0x00008260
Rooms: EQU 0x00008200
MnstY: EQU 0x00000004
MnstX: EQU 0x00000003
Template: EQU 0x00000001
Hits: EQU 0x00000000
MINMONSTERS: EQU 0x0000000A
MAXMONSTERS: EQU 0x00000020
MNSTRECSIZE: EQU 0x00000005
MonsterTemplates: EQU 0x000022FC
NUM_MNST_TEMPLATES: EQU 0x00000001
RoomFlg: EQU 0x0000000B
RoomConn: EQU 0x0000000A
CellH: EQU 0x00000009
CellW: EQU 0x00000008
CellY: EQU 0x00000007
SUB_B: EQU 0x0000002D
CellX: EQU 0x00000006
RoomH: EQU 0x00000005
RoomW: EQU 0x00000004
RoomY1: EQU 0x00000003
RoomX1: EQU 0x00000002
RoomY0: EQU 0x00000001
RoomX0: EQU 0x00000000
MAXROOMS: EQU 0x00000006
ROOMRECSIZE: EQU 0x00000010
PC: EQU 0x00000040
WALL: EQU 0x00000023
STAIR: EQU 0x0000003E
DOOR: EQU 0x0000002F
FLOOR: EQU 0x0000002E
snake_drawFrame.loop: EQU 0x000022CF
snake_getTailCoeffs: EQU 0x00002291
snake_printPoints: EQU 0x00002217
snake_move.end: EQU 0x00002215
snake_moveTail: EQU 0x00002277
snake_gameOver: EQU 0x00002244
snake_move.dollar: EQU 0x00002205
snake_moveHead: EQU 0x00002261
snake_move.cont: EQU 0x000021D8
snake_move.w: EQU 0x000021D4
snake_move.e: EQU 0x000021D0
snake_move.s: EQU 0x000021CC
snake_move.n: EQU 0x000021C8
snake_getHeadCoeffs: EQU 0x00002286
snake_placeDollar: EQU 0x0000229C
snake_drawFrame: EQU 0x000022C6
snake_move: EQU 0x000021AA
ROOMMIN: EQU 0x00000004
snake_NmiHandler.set: EQU 0x00002167
snake_NmiHandler.reset: EQU 0x00002162
snake_NmiHandler: EQU 0x00002155
snake_main.end: EQU 0x00002154
snake_main.e: EQU 0x00002144
snake_main.w: EQU 0x0000214C
snake_main.s: EQU 0x0000213C
snake_main.n: EQU 0x00002134
snake_main.loop: EQU 0x00002101
snake_init: EQU 0x0000216C
GameOver: EQU 0x000020F1
FRAME2: EQU 0x000020CB
apl_tokenizeLiteral.bif: EQU 0x00004267
FRAME1: EQU 0x000020A5
HEIGHT: EQU 0x00000018
WIDTH: EQU 0x00000026
WEST: EQU 0x00000003
EAST: EQU 0x00000002
SOUTH: EQU 0x00000001
NORTH: EQU 0x00000000
DELAY: EQU 0x0000000A
Coeffs: EQU 0x00008206
Dir: EQU 0x00008205
DelayCounter: EQU 0x00008204
Level: EQU 0x00008203
Points: EQU 0x00008202
Tail: EQU 0x00008201
Head: EQU 0x00008200
dos_eof.end: EQU 0x0000208F
dos_eof.true: EQU 0x0000208D
dos_expand: EQU 0x00002092
dos_fWrite.skip: EQU 0x00002065
dos_fPeekAhead: EQU 0x0000204A
dos_fPeek: EQU 0x0000203D
dos_fWrite: EQU 0x00002058
dos_fWriteLine.end: EQU 0x0000203A
dos_fWriteLine.loop: EQU 0x0000202A
dos_fWriteLine: EQU 0x00002028
dos_fReadLn.end: EQU 0x00002020
dos_eof: EQU 0x00002079
dos_fReadLn.loop: EQU 0x0000200B
dos_fReadLn: EQU 0x00002009
dos_seek: EQU 0x00001FF1
dos_cat.cont2: EQU 0x00001FE5
dos_cat.nl: EQU 0x00001FE2
dos_cat.cont: EQU 0x00001FD2
dos_cat.loop: EQU 0x00001FC6
dos_cat.err: EQU 0x00001FEA
dos_reset: EQU 0x0000209C
dos_loadFile.loop: EQU 0x00001F91
dos_loadFile.end: EQU 0x00001F9D
dos_loadFile.endNameCpy: EQU 0x00001F7B
dos_loadFile.nameCpyLoop: EQU 0x00001F6B
dos_loadFile.notFound: EQU 0x00001FA6
dos_loadFile.noDisk: EQU 0x00001FAC
dos_loadFile: EQU 0x00001F48
dos_saveFile.loop: EQU 0x00001F11
dos_saveFile.diskFull: EQU 0x00001F23
dos_saveFile.cont: EQU 0x00001EE8
dos_saveFile.invName: EQU 0x00001F29
dos_saveFile.noDisk: EQU 0x00001F2F
dos_saveFile: EQU 0x00001EC8
dos_nextSector: EQU 0x00001EA6
LEFT_PAREN_T: EQU 0x0000402D
dos_computeSector.skip2: EQU 0x00001EA3
dos_computeSector.mul2: EQU 0x00001E97
dos_computeSector.skip: EQU 0x00001E95
dos_computeSector.mul: EQU 0x00001E8A
dos_computeSector: EQU 0x00001E84
dos_requiredSectors.end: EQU 0x00001E81
dos_requiredSectors.cont: EQU 0x00001E7A
dos_requiredSectors.div: EQU 0x00001E72
dos_requiredSectors: EQU 0x00001E6C
dos_fileExistsInSector.end: EQU 0x00001E36
dos_fileExistsInSector.continue: EQU 0x00001E2E
dos_fileExistsInSector.loop: EQU 0x00001E1B
dos_fileExists.found: EQU 0x00001E10
dos_fileExistsInSector: EQU 0x00001E12
dos_fileExists.loop: EQU 0x00001DFC
dos_findFreeFileSlotInSector.found: EQU 0x00001DF7
dos_findFreeFileSlotInSector.loop: EQU 0x00001DE7
dos_findFreeFileSlot.found: EQU 0x00001DDD
dos_findFreeFileSlotInSector: EQU 0x00001DDF
dos_findFreeFileSlot.loop: EQU 0x00001DC9
dos_touch.end: EQU 0x00001DC6
dos_touch.diskFull: EQU 0x00001DAB
dos_findFreeFileSlot: EQU 0x00001DC7
dos_touch.fileExists: EQU 0x00001DB4
dos_touch.invName: EQU 0x00001DBD
dos_ls.listFiles: EQU 0x00001D77
dos_cd.end: EQU 0x00001D6C
dos_cd.noDir: EQU 0x00001D60
dos_cd.root: EQU 0x00001D69
dos_nextDir.loop: EQU 0x00001D1B
dos_dirExists.yes: EQU 0x00001D16
dos_dirExists.loop: EQU 0x00001D05
dos_validateFilename.next: EQU 0x00001CE7
dos_validateFilename.true: EQU 0x00001CEB
run_evalIndex.loop1: EQU 0x000049E5
dos_validateFilename.loop: EQU 0x00001CD3
dos_validateFilename.false: EQU 0x00001CEF
dos_validateFilename: EQU 0x00001CC4
dos_validateDirname.end: EQU 0x00001CC1
dos_validateDirname.true: EQU 0x00001CB9
dos_validateDirname.false: EQU 0x00001CBD
dos_mkDir.end: EQU 0x00001C97
dos_mkDir.tooMany: EQU 0x00001C8E
dos_mkDir.makeDir: EQU 0x00001C6C
dos_mkDir.checkDir: EQU 0x00001C5B
dos_mkDir.exists: EQU 0x00001C85
dos_dirExists: EQU 0x00001CF6
rog_move: EQU 0x000023D0
dos_mkDir.invName: EQU 0x00001C7C
dos_validateDirname: EQU 0x00001C9A
dos_rmDir.end: EQU 0x00001C40
dos_rmDir.rm: EQU 0x00001C38
dos_rmDir.loop: EQU 0x00001C20
dos_saveFileTabSector: EQU 0x00001E4A
dos_rm.notFound: EQU 0x00001C08
dos_fileExists: EQU 0x00001DFA
dos_nextFileRecord: EQU 0x00001E5C
dos_tabFileName: EQU 0x00001BDE
dos_listFilesInSector.continue: EQU 0x00001BD5
dos_listFilesInSector.loop: EQU 0x00001BA5
dos_loadFileTabSector: EQU 0x00001E38
dos_listFiles.loop: EQU 0x00001B8E
dos_listFiles: EQU 0x00001B8C
dos_listDirs.end: EQU 0x00001B87
dos_listDirs.nextDir: EQU 0x00001B7E
dos_listDirs.checkDir: EQU 0x00001B69
dos_listDirs: EQU 0x00001B5C
dos_saveDirs: EQU 0x00001B46
dos_loadDirs: EQU 0x00001B30
dos_getStatusMsg.end: EQU 0x00001B2E
dos_getStatusMsg.noDisk: EQU 0x00001B28
dos_listFilesInSector: EQU 0x00001B9C
dos_getStatusMsg.diskFull: EQU 0x00001B22
dos_getStatusMsg.noSuchDir: EQU 0x00001B1C
dos_getStatusMsg.tooManyDirs: EQU 0x00001B16
dos_getStatusMsg.fileNotFound: EQU 0x00001B10
dos_getStatusMsg.fileExists: EQU 0x00001B0A
dos_getStatusMsg.dirExists: EQU 0x00001B04
dos_getStatusMsg.invFilename: EQU 0x00001AFE
dos_getStatusMsg.invDirname: EQU 0x00001AF8
dos_getStatusMsg.ok: EQU 0x00001AEC
dos_getStatusMsg: EQU 0x00001AB6
dos_format.loop: EQU 0x00001A8E
dos_save.invalidSector: EQU 0x00001A75
dos_save.invalidAddress: EQU 0x00001A6D
dos_save: EQU 0x00001A49
dos_load.invalidSector: EQU 0x00001A41
dos_load.invalidAddress: EQU 0x00001A39
dos_load: EQU 0x00001A15
dos_checkNvram.printMemTest: EQU 0x00001A11
dos_checkNvram.memTestOk: EQU 0x00001A0A
dos_printRecord: EQU 0x000019F1
dos_cdRoot: EQU 0x00001D29
dos_setUpCf.noDisk: EQU 0x0000198B
FileLen: EQU 0x0000000E
FileDir: EQU 0x0000000D
FileExists: EQU 0x00000000
Filename: EQU 0x00000000
SECTOR_SIZE: EQU 0x00000200
FILE_TABLE_SECTORS: EQU 0x0000003F
FILE_RECORD_SIZE: EQU 0x00000010
FILE_RECORDS_PER_SECTOR: EQU 0x00000020
MAX_FILES: EQU 0x00000FF7
MAX_DIRS: EQU 0x0000003F
FS_INFO_LEN: EQU 0x00000008
MAX_FILENAME_LEN: EQU 0x0000000C
MAX_DIRNAME_LEN: EQU 0x00000008
DiskPresent: EQU 0x0000806B
rog_sanitiseMap.xLoop: EQU 0x00002839
DosErr: EQU 0x0000806A
FilePtr: EQU 0x00008068
TempDirname: EQU 0x00008050
CurrentDir: EQU 0x0000804F
CurrentPath: EQU 0x00008046
SectorBuffer: EQU 0x00008400
ParentFolder: EQU 0x00001967
RootFolder: EQU 0x00001965
FsInfo: EQU 0x0000195D
NO_DISK: EQU 0x0000000A
DISK_FULL: EQU 0x00000009
NO_SUCH_DIR: EQU 0x00000008
TOO_MANY_DIRS: EQU 0x00000007
FILE_NOT_FOUND: EQU 0x00000006
FILE_EXISTS: EQU 0x00000005
DIR_EXISTS: EQU 0x00000004
INVALID_FILENAME: EQU 0x00000003
INVALID_DIRNAME: EQU 0x00000002
INVALID_SECTOR: EQU 0x00000001
DOS_OK: EQU 0x00000000
ErrUnknown: EQU 0x0000194F
ErrNoDisk: EQU 0x00001947
ErrDiskFull: EQU 0x0000193D
ErrNoSuchDir: EQU 0x0000192B
ErrTooManyDirs: EQU 0x00001916
ErrFileNotFound: EQU 0x00001907
ErrFileExists: EQU 0x000018F3
ErrDirExists: EQU 0x000018DA
ErrInvFileName: EQU 0x000018C8
ErrInvDirName: EQU 0x000018B1
ErrInvalidSector: EQU 0x000018A2
DosOk: EQU 0x00001896
Bytes: EQU 0x0000188F
LbaSectors: EQU 0x00001881
run_while.syntaxErr: EQU 0x00004D57
FirmwareRev: EQU 0x00001872
Model: EQU 0x0000186A
SerialNum: EQU 0x00001861
NvRamNok: EQU 0x00001851
NvRamOk: EQU 0x00001845
DiskNotFound: EQU 0x00001836
DiskFound2: EQU 0x00001830
DiskFound1: EQU 0x0000182A
term_greet.end: EQU 0x00001829
term_greet.loop: EQU 0x0000181B
handleDartRx: EQU 0x000017ED
term_handleKeyClick: EQU 0x000017E0
term_wrapLine: EQU 0x000017B2
term_wrapScreen: EQU 0x000017AA
term_main.wrapLine: EQU 0x000017A4
term_main.loop: EQU 0x0000178E
term_greet: EQU 0x00001817
term_setupInterrupts: EQU 0x00001800
term_resetScreen: EQU 0x000017C4
IntTableSize: EQU 0x00000008
IntTable: EQU 0x0000A000
Separator: EQU 0x0000175C
Program: EQU 0x00001755
mon_get.addrError: EQU 0x0000174D
mon_put.valError: EQU 0x00001734
mon_put.loop: EQU 0x00001713
mon_put.addrError: EQU 0x0000172C
mon_poke.valError: EQU 0x000016F6
mon_poke.addrError: EQU 0x000016EE
mon_peek.parseError: EQU 0x000016C8
mon_isWriteable.nonWriteable: EQU 0x000016AF
mon_isWriteable: EQU 0x000016A7
mon_printLByte: EQU 0x00001684
mon_printChar.print: EQU 0x00001650
mon_printChar.special: EQU 0x0000164E
mon_printChar: EQU 0x00001648
mon_printByte: EQU 0x00001654
mon_printVals.skipSpace: EQU 0x00001608
mon_printVals.loop: EQU 0x000015FE
mon_printDByte: EQU 0x00001666
mon_printVals: EQU 0x000015F8
mon_printAddrs: EQU 0x000015EC
mon_dsp.loop: EQU 0x000015D7
mon_prevAddrs: EQU 0x0000169E
mon_prevScreen.loop: EQU 0x0000159A
mon_nextAddrs: EQU 0x00001695
mon_nextScreen.loop: EQU 0x00001585
mon_copy.invalidValue: EQU 0x00001559
mon_copy.invalidAddress: EQU 0x0000156C
rog_countConnectedRooms.loop: EQU 0x000026FE
mon_fill.loop: EQU 0x00001510
mon_fill.parseError: EQU 0x00001520
mon_setValue.endSetDirect: EQU 0x000014D8
mon_setValue.loop: EQU 0x000014CA
mon_setValue.parseError: EQU 0x000014DE
mon_setValue.setDirect: EQU 0x000014C3
mon_setValue.completed: EQU 0x000014EE
mon_run.parseError: EQU 0x00001485
mon_dsp: EQU 0x000015C7
mon_setAddress.parseError: EQU 0x00001467
mon_gotoStatusLine: EQU 0x0000143E
mon_main_loop.bye: EQU 0x00001427
mon_run: EQU 0x0000147A
mon_prevLine: EQU 0x000015B8
mon_nextLine: EQU 0x000015A9
mon_prevScreen: EQU 0x00001594
mon_nextScreen: EQU 0x0000157F
mon_setAddress: EQU 0x00001454
mon_copy: EQU 0x00001533
mon_fill: EQU 0x000014F4
mon_setValue: EQU 0x00001499
mon_gotoCmdLine: EQU 0x00001428
mon_main_loop: EQU 0x00001371
mon_refresh: EQU 0x000016B2
LINE_NUM: EQU 0x00000016
MonCurrAddr: EQU 0x00008200
InvVal: EQU 0x00001355
dos_nextDir: EQU 0x00001D18
InvAddr: EQU 0x00001345
ParseErr: EQU 0x00001339
Exit: EQU 0x0000132E
Bye: EQU 0x0000132A
Run: EQU 0x00001328
Copy: EQU 0x00001326
Fill: EQU 0x00001324
PrevLine: EQU 0x00001322
NextLine: EQU 0x00001320
PrevScreen: EQU 0x0000131E
NextScreen: EQU 0x0000131C
SetAddress: EQU 0x0000131A
SetValue: EQU 0x00001318
cmd_saveFile: EQU 0x00001EB8
FileBuffer: EQU 0x0000C000
CurrentFileSize: EQU 0x00008066
CurrentFileName: EQU 0x00008059
cmd_echo.endLoop: EQU 0x000012EC
cmd_echo.toFile: EQU 0x000012F2
cmd_echo.loop: EQU 0x000012DD
run_evalFunction: EQU 0x00004885
run_main: EQU 0x000046EE
apl_main: EQU 0x00004171
tar_main: EQU 0x00002E68
dos_rm: EQU 0x00001BF3
dos_touch: EQU 0x00001D7B
dos_cd: EQU 0x00001D3A
dos_rmDir: EQU 0x00001C10
dos_mkDir: EQU 0x00001C41
dos_ls: EQU 0x00001D6D
run_isAddOp.true: EQU 0x00004BED
dos_pwd: EQU 0x00001D21
ed_main: EQU 0x00002A92
onp_main: EQU 0x00002950
mon_main: EQU 0x00001363
dos_cfDiskInfo: EQU 0x00001998
dos_cat: EQU 0x00001FB2
cmd_saveFileAs: EQU 0x00001EAA
cmd_loadFile: EQU 0x00001F35
mon_get: EQU 0x0000173C
mon_put: EQU 0x000016FE
mon_poke: EQU 0x000016D0
mon_peek: EQU 0x000016B9
cmd_echo: EQU 0x000012D8
cmd_main.wrap: EQU 0x0000120B
cmd_main.run: EQU 0x000012C7
cmd_main.apl: EQU 0x000012C1
cmd_main.tar: EQU 0x000012BB
cmd_main.format: EQU 0x000012B5
cmd_main.rm: EQU 0x000012AF
cmd_main.touch: EQU 0x000012A9
cmd_main.cd: EQU 0x000012A3
cmd_main.rmdir: EQU 0x0000129D
apl_processFunction: EQU 0x0000443A
cmd_main.mkdir: EQU 0x00001297
cmd_main.ls: EQU 0x00001291
cmd_main.pwd: EQU 0x0000128B
cmd_main.edit: EQU 0x00001285
cmd_main.onp: EQU 0x0000127F
rog_main: EQU 0x00002314
snake_main: EQU 0x000020FE
cmd_main.test: EQU 0x00001272
cmd_main.dd: EQU 0x00001269
cmd_main.di: EQU 0x00001263
term_main: EQU 0x00001782
cmd_main.beep: EQU 0x0000124B
cmd_main.cat: EQU 0x00001245
cmd_main.save: EQU 0x0000123F
cmd_main.load: EQU 0x00001239
cmd_main.get: EQU 0x00001233
run_evalMul.div: EQU 0x00004A57
cmd_main.put: EQU 0x0000122D
cmd_main.poke: EQU 0x00001227
cmd_main.peek: EQU 0x00001221
cmd_main.mon: EQU 0x00001278
cmd_main.rnd: EQU 0x00001251
cmd_main.echo: EQU 0x0000121B
cmd_main.rst: EQU 0x0000121A
cmd_main.clr: EQU 0x00001211
cmd_readLn: EQU 0x000012CD
Prompt: EQU 0x000010AB
UnknownCmd: EQU 0x0000109F
AplRun: EQU 0x0000109B
Apl: EQU 0x00001097
Tar: EQU 0x00001093
Format: EQU 0x0000108C
Rm: EQU 0x00001089
Touch: EQU 0x00001083
Cd: EQU 0x00001080
RmDir: EQU 0x0000107A
MkDir: EQU 0x00001074
Ls: EQU 0x00001071
dos_validateDirname.loop: EQU 0x00001CA7
Pwd: EQU 0x0000106D
Edit: EQU 0x00001068
Onp: EQU 0x00001064
Vh: EQU 0x00001061
Snake: EQU 0x0000105B
Test: EQU 0x00001056
DiskDiag: EQU 0x00001053
DiskInfo: EQU 0x00001050
Term: EQU 0x0000104B
Beep: EQU 0x00001046
Cat: EQU 0x00001042
Save: EQU 0x0000103D
Load: EQU 0x00001038
Get: EQU 0x00001034
Put: EQU 0x00001030
Poke: EQU 0x0000102B
Peek: EQU 0x00001026
StackPtr: EQU 0x00008210
Rnd: EQU 0x00001022
EchoCmd: EQU 0x0000101D
Reset: EQU 0x00001019
Mon: EQU 0x00001015
Clr: EQU 0x00001011
test_main: EQU 0x00001010
u16_formatBin: EQU 0x00001003
trimLeading0s.end: EQU 0x00001000
trimLeading0s.loop: EQU 0x00000FF1
trimLeading0s: EQU 0x00000FEE
u8_max: EQU 0x00000FEA
u8_min: EQU 0x00000FE6
u8_formatBin.endLoop: EQU 0x00000FD9
u8_formatBin.zero: EQU 0x00000FD5
u8_formatBin.loop: EQU 0x00000FC8
u8_formatBin: EQU 0x00000FBD
u8_parseBin.end: EQU 0x00000FBC
u8_parseBin.loop: EQU 0x00000F9E
u8_parseBin.parseError: EQU 0x00000FBA
u16_formatHex: EQU 0x00000F71
i16_formatDec.pos: EQU 0x00000F6B
i16_formatDec: EQU 0x00000F58
u16_formatDec.loop: EQU 0x00000F30
u16_formatDec: EQU 0x00000F29
trimDec.end: EQU 0x00000F27
trimDec.chkneg: EQU 0x00000F1C
trimDec.loop: EQU 0x00000F11
trimDec.cont: EQU 0x00000F0C
trimDec: EQU 0x00000EFE
u16_parseDec.overflow: EQU 0x00000EFA
u16_parseDec.end: EQU 0x00000EFC
u16_parseDec.parseError: EQU 0x00000EF6
u16_parseDec.loop: EQU 0x00000ED4
u8_parseBin: EQU 0x00000F91
u16_parseBin: EQU 0x00000EC9
u16_parseHex.parseError: EQU 0x00000EC6
u16_parseHex: EQU 0x00000EB9
u16_parseDec: EQU 0x00000ED0
i16_parseDec.pos: EQU 0x00000EB5
i16_parseDec: EQU 0x00000EA5
u8_div.end: EQU 0x00000EA4
u8_div.loop: EQU 0x00000E9C
u8_mul.loop: EQU 0x00000E96
u8_mul: EQU 0x00000E8D
dos_fRead: EQU 0x00001FF5
i16_mul.end: EQU 0x00000E8C
i16_mul.correct: EQU 0x00000E88
i16_mul.overflow: EQU 0x00000E84
i16_mul: EQU 0x00000E6C
u16_mul.end: EQU 0x00000E6A
u16_mul.overflow: EQU 0x00000E62
u16_mul.correct: EQU 0x00000E66
u16_mul.loop: EQU 0x00000E54
u16_mul: EQU 0x00000E4E
i16_is0.end: EQU 0x00000E4D
i16_is0: EQU 0x00000E3D
i16_div.end: EQU 0x00000E37
i16_div.divBy0: EQU 0x00000E39
i16_div: EQU 0x00000E1A
apl_tokenizeComment: EQU 0x00004477
i16_operands2abs: EQU 0x00000E0D
i16_mulSign: EQU 0x00000E02
u16_div.end: EQU 0x00000DFF
u16_div.loop: EQU 0x00000DEB
u16_div.proceed: EQU 0x00000DE7
i16_cmp.invertGreater: EQU 0x00000DD4
i16_cmp.invert: EQU 0x00000DCB
i16_cmp.greater: EQU 0x00000DB3
i16_cmp.sameSign: EQU 0x00000DBB
i16_cmp.end: EQU 0x00000DD8
i16_cmp.equal: EQU 0x00000DA1
i16_cmp.notEqual: EQU 0x00000DA5
i16_cmp: EQU 0x00000D98
i16_not: EQU 0x00000D8E
i8_abs: EQU 0x00000D81
i16_neg: EQU 0x00000D89
i16_abs: EQU 0x00000D77
i16_is0.false: EQU 0x00000E4B
u16_cmp.greater: EQU 0x00000D74
u16_cmp.smaller: EQU 0x00000D71
u16_cmp.notEqual: EQU 0x00000D65
u16_cmp: EQU 0x00000D5A
i16_xor: EQU 0x00000D53
i16_or: EQU 0x00000D4C
u16_or: EQU 0x00000D4C
i16_and: EQU 0x00000D45
u16_and: EQU 0x00000D45
i16_sub: EQU 0x00000D41
u16_sub: EQU 0x00000D41
i16_add: EQU 0x00000D3E
u16_add: EQU 0x00000D3E
FORMATERR: EQU 0x00000003
OVERFLOW: EQU 0x00000002
DIVBY0: EQU 0x00000001
ABS: EQU 0x0000007F
SIGN: EQU 0x00000080
SMALLER: EQU 0x000000FF
GREATER: EQU 0x00000001
EQUAL: EQU 0x00000000
list_insertAt.loop: EQU 0x00000D11
list_insertAt: EQU 0x00000D07
list_removeAt.loop: EQU 0x00000CEF
list_removeAt: EQU 0x00000CE3
list_putAt: EQU 0x00000CD3
list_getAddrAt: EQU 0x00000D2C
list_getAt: EQU 0x00000CC3
list_last.err: EQU 0x00000C9F
list_last: EQU 0x00000C87
list_copy.loop: EQU 0x00000C74
list_copy: EQU 0x00000C66
list_contains.end: EQU 0x00000C63
list_contains.true: EQU 0x00000C61
list_contains.next: EQU 0x00000C56
list_contains.loop: EQU 0x00000C48
list_contains: EQU 0x00000C40
list_isEmpty.notEmpty: EQU 0x00000C3D
list_empty: EQU 0x00000C2D
list_pull.err: EQU 0x00000C2A
list_pull: EQU 0x00000C0D
list_trunc.loop: EQU 0x00000C07
list_trunc: EQU 0x00000C02
list_trim: EQU 0x00000BF4
list_insert.loop: EQU 0x00000BD0
list_insert.err: EQU 0x00000BF1
list_insert: EQU 0x00000BC0
list_copyElem: EQU 0x00000CA2
list_endAddr: EQU 0x00000CAB
list_append.err: EQU 0x00000BBD
list_append: EQU 0x00000BA6
list_push: EQU 0x00000BA6
list_expand.err: EQU 0x00000BA3
list_expand: EQU 0x00000B92
list_len: EQU 0x00000B8E
list_isFull.notFull: EQU 0x00000B8B
list_isFull: EQU 0x00000B81
OK: EQU 0x00000000
list_create.error: EQU 0x00000B7E
list_create: EQU 0x00000B73
list_clear.loop: EQU 0x00000B63
list_clear.end: EQU 0x00000B6F
list_isEmpty: EQU 0x00000C33
list_clear: EQU 0x00000B52
MAX_LIST_SIZE: EQU 0x0000007F
LIST_SIZE: EQU 0x00000000
getRamBank: EQU 0x00000B48
getRomBank: EQU 0x00000B42
setRamBank: EQU 0x00000B2B
setRomBank: EQU 0x00000B18
mem_cpy: EQU 0x00000B17
memTest: EQU 0x00000AED
MEM_TEST: EQU 0x00000AE6
MEM_ERR: EQU 0x00000001
BANK_PORT: EQU 0x000000DF
str_startsWith.end: EQU 0x00000AE0
str_startsWith.false: EQU 0x00000ADA
str_startsWith.true: EQU 0x00000ADE
str_startsWith.loop: EQU 0x00000AC7
str_startsWith: EQU 0x00000AC2
str_toLower.next: EQU 0x00000ABA
str_toLower.end: EQU 0x00000ABE
str_toLower.loop: EQU 0x00000AA5
str_toLower: EQU 0x00000AA2
str_toUpper.next: EQU 0x00000A9A
str_toUpper.end: EQU 0x00000A9E
str_toUpper.loop: EQU 0x00000A85
str_toUpper: EQU 0x00000A82
str_sub.end: EQU 0x00000A7F
str_sub.sub: EQU 0x00000A6B
i16_cmp.smaller: EQU 0x00000DB7
str_sub.start: EQU 0x00000A61
str_sub: EQU 0x00000A5F
str_charAt.end: EQU 0x00000A5C
str_charAt.loop: EQU 0x00000A53
str_charAt: EQU 0x00000A51
str_indexOf.end: EQU 0x00000A4E
str_indexOf.found: EQU 0x00000A48
str_indexOf.notFound: EQU 0x00000A4C
str_indexOf.loop: EQU 0x00000A39
str_indexOf: EQU 0x00000A35
str_cat.end: EQU 0x00000A2D
str_cat.cat: EQU 0x00000A1D
str_cat.start: EQU 0x00000A12
END_T: EQU 0x00004067
str_cat: EQU 0x00000A0E
str_rtrim.loop1: EQU 0x000009FD
str_rtrim.loop: EQU 0x000009F4
str_rtrim: EQU 0x000009F2
str_ltrim.loop: EQU 0x000009EE
str_ltrim: EQU 0x000009E6
str_2mem.end: EQU 0x000009E2
str_2mem.loop: EQU 0x000009D2
str_2mem: EQU 0x000009CE
str_2str.loop: EQU 0x000009BA
str_2str: EQU 0x000009B8
str_shift: EQU 0x000009B4
str_tok.end: EQU 0x000009AE
str_tok.space: EQU 0x000009A7
run_evaluate.loop: EQU 0x00004779
str_tok.loop: EQU 0x00000998
str_tok: EQU 0x00000996
str_len.eos: EQU 0x00000992
onp_processOperator: EQU 0x000029FF
str_len.loop: EQU 0x00000986
str_copy.end: EQU 0x0000097D
str_copy.loop: EQU 0x0000096D
str_copy: EQU 0x00000969
str_cmpMem.end: EQU 0x00000962
str_cmpMem.neq: EQU 0x0000095E
str_cmpMem.eq: EQU 0x0000095A
str_cmpMem.loop: EQU 0x00000948
str_cmpMem: EQU 0x00000944
str_cmp.end: EQU 0x0000093D
str_cmp.eq: EQU 0x00000935
str_cmp.neq: EQU 0x00000939
str_cmp.loop: EQU 0x00000921
str_cmp: EQU 0x0000091D
randomize.end: EQU 0x0000091A
randomize.cont: EQU 0x00000914
u8_div: EQU 0x00000E9A
rndMod8: EQU 0x000008F7
u16_div: EQU 0x00000DDA
rog_initCells: EQU 0x000025C1
rndMod: EQU 0x000008E4
randomize: EQU 0x00000904
rnd.doRnd: EQU 0x000008A2
rnd: EQU 0x00000892
delay1520us.loop: EQU 0x0000086F
bcd2asc: EQU 0x00000844
bin2Bcd.units: EQU 0x00000843
bin2Bcd.tens: EQU 0x0000083A
bin2Bcd.hundreds: EQU 0x00000831
bin2Bcd: EQU 0x0000082D
numbers: EQU 0x00000829
nibble2asc: EQU 0x0000081E
isByteDecStr.parseError: EQU 0x00000803
isByteDecStr: EQU 0x000007FB
isByteStr.parseError: EQU 0x000007F8
isDByteStr.parseError: EQU 0x000007D7
str_len: EQU 0x00000982
isAlphanumeric.false: EQU 0x000007A1
isAlphanumeric.true: EQU 0x0000079D
isAlphanumeric: EQU 0x0000077B
isLowercaseLetter.yes: EQU 0x00000775
isLowercaseLetter.no: EQU 0x00000778
isLowercaseLetter: EQU 0x00000769
toUpper.end: EQU 0x00000768
toUpper: EQU 0x0000075E
isUppercaseLetter.yes: EQU 0x00000758
isUppercaseLetter.no: EQU 0x0000075B
isUppercaseLetter: EQU 0x0000074C
isDecDigit.yes: EQU 0x00000746
isDecDigit.no: EQU 0x00000749
dos_validateFilename.end: EQU 0x00001CF3
isDecDigit: EQU 0x0000073A
isHexDigit.yes: EQU 0x00000734
isHexDigit.no: EQU 0x00000737
isHexDigit: EQU 0x00000724
hexDigit2nibble.letters: EQU 0x00000721
hexDigit2nibble.numbers: EQU 0x0000071E
parseDByte.parseOk: EQU 0x00000712
parseDByte.parseError: EQU 0x00000715
isDByteStr: EQU 0x000007A5
parseDByte: EQU 0x000006DB
parseByteDec: EQU 0x000006DA
parseByte.parseOk: EQU 0x000006D4
hexDigit2nibble: EQU 0x00000718
parseByte.parseError: EQU 0x000006D7
isByteStr: EQU 0x000007DA
parseByte: EQU 0x000006B6
asc2byte: EQU 0x000006B2
byte2asc: EQU 0x00000807
asc2hexstr16b: EQU 0x0000069A
asc2hexstr8b: EQU 0x0000068B
dos_getStatusMsg.invSector: EQU 0x00001AF2
ERR: EQU 0x00000001
ed_up.scroll: EQU 0x00002C41
cas_init: EQU 0x00000681
cas_initSeq: EQU 0x00000677
ps2_wait4Tx.loop: EQU 0x00000529
ps2_dataRelease: EQU 0x00000566
ps2_clockRelease: EQU 0x00000544
ps2_dataInhibit: EQU 0x00000555
delay1520us: EQU 0x0000086C
ps2_clockInhibit: EQU 0x00000533
readLine.tab: EQU 0x00000506
readLine.bkspc: EQU 0x000004FE
apl_isWhitespace.true: EQU 0x0000452D
readLine.return: EQU 0x0000050E
readLine.loop: EQU 0x000004E7
readLine: EQU 0x000004E3
readKey.noEcho: EQU 0x000004C7
readKey.tab: EQU 0x000004D7
readKey.bkspc: EQU 0x000004CA
readKey: EQU 0x000004A8
FALSE: EQU 0x00000000
keyInput.shiftUp: EQU 0x00000492
keyInput.shiftDn: EQU 0x0000048B
keyInput.extKey: EQU 0x00000499
keyInput.keyUp: EQU 0x00000499
keyInput: EQU 0x00000474
readKeyAsync: EQU 0x00000473
ps2ShiftScancodes: EQU 0x000005F7
ps2_scancode2asc.continue: EQU 0x0000046E
ps2Scancodes: EQU 0x00000577
ps2_scancode2asc.shift: EQU 0x0000046B
ps2_scancode2asc: EQU 0x0000045A
ps2_wait4Tx: EQU 0x00000528
ps2_transmit: EQU 0x00000513
ps2_readScancode: EQU 0x00000451
ps2_initSeq: EQU 0x0000040E
MOVE_SW: EQU 0x0000006A
MOVE_NW: EQU 0x00000037
MOVE_SE: EQU 0x0000006C
MOVE_NE: EQU 0x00000039
apl_isLCaseLetter.yes: EQU 0x000044D3
MOVE_E: EQU 0x0000006F
MOVE_W: EQU 0x00000075
MOVE_S: EQU 0x0000006B
MOVE_N: EQU 0x00000038
TXA: EQU 0x00000068
RSHIFT: EQU 0x00000059
dos_format: EQU 0x00001A7D
LSHIFT: EQU 0x00000012
EXT_KEY: EQU 0x000000E0
KEY_UP: EQU 0x000000F0
cf_setSector: EQU 0x000003EA
mon_printByteA: EQU 0x00001657
dbg_SetSector: EQU 0x000003D1
dbgSetSector: EQU 0x000003C0
cf_diag: EQU 0x000003B2
cf_writeSector.loop: EQU 0x0000039F
cf_writeSector: EQU 0x00000391
cf_readSector.loop: EQU 0x0000037E
cf_readSector: EQU 0x00000370
cf_di.loop: EQU 0x0000035F
cf_di: EQU 0x00000348
cf_error: EQU 0x00000343
cf_init: EQU 0x00000334
cf_waitDat.loop: EQU 0x00000328
cf_waitDat: EQU 0x00000327
cf_waitCmd.loop: EQU 0x0000031B
cf_waitCmd: EQU 0x0000031A
cf_wait.loop: EQU 0x00000312
cf_wait: EQU 0x00000311
TRUE: EQU 0x000000FF
delay10ms: EQU 0x00000876
cf_exists.true: EQU 0x0000030E
cf_exists: EQU 0x000002F5
CF_OK: EQU 0x00000000
CF_ID: EQU 0x000000EC
CF_DIAG: EQU 0x00000090
CF_WRITE: EQU 0x00000030
CF_READ: EQU 0x00000020
CF_SET_FEAT: EQU 0x000000EF
CF_LBA_MODE: EQU 0x000000E0
CF_8BIT_MODE: EQU 0x00000001
CF_CMD: EQU 0x000000F7
CF_STATUS: EQU 0x000000F7
CF_LBA3: EQU 0x000000F6
CF_LBA2: EQU 0x000000F5
CF_LBA1: EQU 0x000000F4
CF_LBA0: EQU 0x000000F3
CF_SECT_COUNT: EQU 0x000000F2
CF_FEAT: EQU 0x000000F1
CF_ERR: EQU 0x000000F1
CF_DAT: EQU 0x000000F0
CF_BASE: EQU 0x000000F0
dart_TxWait: EQU 0x000002EA
dart_xon: EQU 0x000002E3
dart_xoff: EQU 0x000002DC
dart_getChar: EQU 0x000002D3
dart_putChar: EQU 0x000002D0
dart_init: EQU 0x000002C6
init_seq: EQU 0x000002BC
X_OFF: EQU 0x00000011
X_ON: EQU 0x00000013
DART_A_DAT: EQU 0x000000EC
DART_A_CMD: EQU 0x000000EE
tm_txWait: EQU 0x000002A3
tm_diag: EQU 0x0000029A
tm_restoreCursor: EQU 0x000002B3
tm_saveCursor: EQU 0x000002AA
scroll: EQU 0x00000276
writeStr.end: EQU 0x0000026E
writeStr.loop: EQU 0x00000260
getChar.loop: EQU 0x00000254
getChar.delay: EQU 0x00000252
getChar.cont: EQU 0x00000248
getChar.empty: EQU 0x0000023E
getChar: EQU 0x0000023D
putChar: EQU 0x0000023A
cursorLShift: EQU 0x00000231
gotoXY: EQU 0x0000021E
writeStr: EQU 0x0000025E
cursorOff: EQU 0x0000020E
dos_tabFileName.loop: EQU 0x00001BEB
cursorOn: EQU 0x00000205
home: EQU 0x000001FC
run_nextBC: EQU 0x00004761
DART_B_DAT: EQU 0x000000ED
clrScr: EQU 0x000001F3
tm_transmitEnable: EQU 0x00000287
DART_B_CMD: EQU 0x000000EF
Blank: EQU 0x000001BC
tm_initSeq: EQU 0x000001B2
CR: EQU 0x0000000D
LF: EQU 0x0000000A
ESC: EQU 0x0000001B
MAX_Y: EQU 0x00000018
delay37us: EQU 0x0000085B
bzr_click: EQU 0x000001A0
BZR_PORT: EQU 0x000000BF
registerNmiHandler: EQU 0x0000017D
handleNmi.end: EQU 0x0000017C
handleNmi.inc2: EQU 0x00000175
loop: EQU 0x00000164
cmd_main: EQU 0x000010AD
apl_tokenizeLiteral.var: EQU 0x0000426C
dos_checkNvram: EQU 0x000019FC
dos_setUpCf: EQU 0x0000196A
writeLn: EQU 0x00000217
nextLine: EQU 0x00000271
keyInit: EQU 0x00000419
rog_sanitiseMap.next: EQU 0x00002847
dspInit: EQU 0x000001E1
copyRom2Ram: EQU 0x00000B07
delay: EQU 0x00000851
bzr_beep: EQU 0x0000018C
Hello: EQU 0x00000120
Ready: EQU 0x0000011A
PROGRAM_DATA: EQU 0x00008200
LineBuff: EQU 0x00008100
DOS_AREA: EQU 0x00008046
apl_isSpecialChar: EQU 0x00004500
Ps2Shift: EQU 0x00008045
CurY: EQU 0x00008041
CurX: EQU 0x00008040
Banks: EQU 0x00008039
Random: EQU 0x00008037
NmiCount: EQU 0x00008035
TxChB: EQU 0x00008016
TxChA: EQU 0x00008015
Cursor: EQU 0x00008014
Echo: EQU 0x00008013
KbdBuff: EQU 0x00008012
TestAddr: EQU 0x00008001
HIGHROM: EQU 0x00004000
MAX_X: EQU 0x00000025
Aniol: EQU 0x00000102
KeyClickHandler: EQU 0x00000100
customNmiHandler: EQU 0x00008042
handleNmi: EQU 0x00000168
handleInt: EQU 0x00000418
Build: EQU 0x00000024
Version: EQU 0x00000020
boot: EQU 0x00000126
resetNmiHandler: EQU 0x00000186
RAMTOP: EQU 0x0000BFFF
